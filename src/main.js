/*
	process - это глобальный объект, мы можем импортировать его в любое место нашего приложения.
	С помошью process можно получить данные о текущем процессе
*/
console.log(process.pid); //Можем получить id запущенного сеанса

/*
	Если вдруг у нас зациклился код и мы не можем его отключить, можно просто в командной
	строке написать kill + id процесса (мы его получили по коду выше): kill 323

	С помощью env мы можем получать переменные окружения. Они пригодятся при конфигурации
	приложения.
*/
console.log(process.env.PORT);
console.log(process.env.NODE_ENV);

/*
Однако, если мы просто вот так попробуем получить переменные, то 
будет undefined, т.к. они не указаны.

Но мы можем задавать переменные окружения с помощью записей в package.json. Чтобы 
передавать эти переменные окружения в код, я установил cross-env в свой проект.

Далее, нужно почитать package.json

Теперь, если мы запустим npm start, то мы сможем увидеть порт, я его указал в package.json
и также мы сможем увидеть NODE_ENV=production. Таким образом, при сборке нашего приложения,
при конфигурации мы сможем явно указывать в каком режиме приложение запускается,
на какому порту и прочее. Такие записи понадобятся и в Docker.

Также, есть и другая возможность считывания env конфигурации, но для этого нужно установить
дополнительный пакет dotenv. После чего мы создаем файл .env, куда и помещаем наши переменные
окружения, затем импортируем их:
*/
const dotenv = require("dotenv");
dotenv.config();

console.log(process.env.SECTION);
console.log(process.env.IS_ADMIN);

/*
	Также, у process есть argv, он нужен для того, чтобы при запуске указывать
	какие-то командные слова.
	Условно, мы написали npm start first second third, таким образом, в момент 
	обработки кода nodejs покажет в консоли массив из [first, second, third]
*/
console.log(process.argv);

//Также, мы можем эксренно завершить приложение на этапе исполнения какого-либо кода с помощью exit

if(Math.random() > 0.5) {
	let i = 0;
	while(true) {
		i++
		console.log(i);
		if(i === 300) process.exit();
	}
} else {
	console.log('Выполнение программы завершено')
	process.exit();
}